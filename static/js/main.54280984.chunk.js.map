{"version":3,"sources":["components/Block.jsx","utils/point.js","utils/tetromino.js","utils/randomizer.js","utils/board.js","components/Matrix.jsx","components/ScoreBoard.jsx","hooks/useKeyHandler.js","reducer.js","components/App.jsx","index.js","hooks/useInterval.js"],"names":["Block","_ref","color","styling","React","useMemo","backgroundColor","getStyling","react_default","a","createElement","style","create","x","y","ShapeType","L","I","T","S","Z","O","J","ShapeOrientation","Up","Right","Down","Left","type","orientation","getShape","tetromino","shapes","rotate","Object","objectSpread","n","_shapes","defineProperty","_ShapeType$L","_ShapeType$I","_ShapeType$T","_ShapeType$S","_ShapeType$Z","_ShapeType$O","_ShapeType$J","shuffle","keys","next","randomizer","_randomizer","toArray","head","tail","slice","length","commitTetrominoToBoard","board","position","value","shape","Tetromino","mappedBoard","r","c","getBoardIndexFromPosition","Point","moveLeft","potentialPosition","isValid","moveRight","Matrix","boardWithTetromino","Board","current","styles","container","map","fill","i","colors","key","concat","borderBottom","display","gridTemplateColumns","height","width","0","1","2","ScoreBoard","level","score","useKeyHandler","handler","useEffect","handleKeyUp","event","document","addEventListener","removeEventListener","Randomizer","firstShape","ActionTypes","MoveDown","MoveLeft","MoveRight","Reset","Rotate","Start","Stop","Tick","initialState","Array","interval","state","reducer","action","_Board$moveDown","nextBoard","_Randomizer$next","_Randomizer$next2","slicedToArray","nextShape","nextRandomizer","_Board$moveDown2","ReactDOM","render","_React$useReducer","useReducer","_React$useReducer2","dispatch","delay","callback","savedCallback","useRef","id","setInterval","clearInterval","useInterval","getElementById"],"mappings":"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","file":"static/js/main.54280984.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Block({ color }) {\n  const styling = React.useMemo(() => getStyling(color), [color]);\n\n  return <div style={styling} />;\n}\n\nfunction getStyling(color) {\n  return {\n    backgroundColor: color,\n  };\n}\n","export function create(x, y) {\n  return { x, y };\n}\n\nexport function equals(a, b) {\n  return a.x === b.x && a.y === b.y;\n}\n","export const ShapeType = {\n  L: 'L',\n  I: 'I',\n  T: 'T',\n  S: 'S',\n  Z: 'Z',\n  O: 'O',\n  J: 'J',\n}\n\nexport const ShapeOrientation = {\n  Up: 0,\n  Right: 1,\n  Down: 2,\n  Left: 3,\n}\n\n// Create a new Tetromino.\nexport function create(type) {\n  return {\n    type,\n    orientation: ShapeOrientation.Up,\n  };\n}\n\n// Get the current blocks for a piece and orientation.\nexport function getShape(tetromino) {\n  return shapes[tetromino.type][tetromino.orientation];\n}\n\n// Rotate a Tetromino clockwise.\nexport function rotate(tetromino) {\n  return {\n    ...tetromino,\n    orientation: nextOrientation(tetromino.orientation),\n  };\n}\n\nfunction nextOrientation(n) {\n  return (n + 1) % 4;\n}\n\nconst shapes = {\n  [ShapeType.L]: {\n    [ShapeOrientation.Up]: [\n      [0, 0, 1],\n      [1, 1, 1],\n      [0, 0, 0],\n    ],\n    [ShapeOrientation.Right]: [\n      [0, 1, 0],\n      [0, 1, 0],\n      [0, 1, 1],\n    ],\n    [ShapeOrientation.Down]: [\n      [0, 0, 0],\n      [1, 1, 1],\n      [1, 0, 0],\n    ],\n    [ShapeOrientation.Left]: [\n      [1, 1, 0],\n      [0, 1, 0],\n      [0, 1, 0],\n    ],\n  },\n\n  [ShapeType.I]: {\n    [ShapeOrientation.Up]: [\n      [0, 0, 0, 0],\n      [1, 1, 1, 1],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n    [ShapeOrientation.Right]: [\n      [0, 0, 1, 0],\n      [0, 0, 1, 0],\n      [0, 0, 1, 0],\n      [0, 0, 1, 0],\n    ],\n    [ShapeOrientation.Down]: [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [1, 1, 1, 1],\n      [0, 0, 0, 0],\n    ],\n    [ShapeOrientation.Left]: [\n      [0, 1, 0, 0],\n      [0, 1, 0, 0],\n      [0, 1, 0, 0],\n      [0, 1, 0, 0],\n    ],\n  },\n\n  [ShapeType.T]: {\n    [ShapeOrientation.Up]: [\n      [0, 1, 0],\n      [1, 1, 1],\n      [0, 0, 0],\n    ],\n    [ShapeOrientation.Right]: [\n      [0, 1, 0],\n      [0, 1, 1],\n      [0, 1, 0],\n    ],\n    [ShapeOrientation.Down]: [\n      [0, 0, 0],\n      [1, 1, 1],\n      [0, 1, 0],\n    ],\n    [ShapeOrientation.Left]: [\n      [0, 1, 0],\n      [1, 1, 0],\n      [0, 1, 0],\n    ],\n  },\n\n  [ShapeType.S]: {\n    [ShapeOrientation.Up]: [\n      [0, 1, 1],\n      [1, 1, 0],\n      [0, 0, 0],\n    ],\n    [ShapeOrientation.Right]: [\n      [0, 1, 0],\n      [0, 1, 1],\n      [0, 0, 1],\n    ],\n    [ShapeOrientation.Down]: [\n      [0, 0, 0],\n      [0, 1, 1],\n      [1, 1, 0],\n    ],\n    [ShapeOrientation.Left]: [\n      [1, 0, 0],\n      [1, 1, 0],\n      [0, 1, 0],\n    ],\n  },\n\n  [ShapeType.Z]: {\n    [ShapeOrientation.Up]: [\n      [1, 1, 0],\n      [0, 1, 1],\n      [0, 0, 0],\n    ],\n    [ShapeOrientation.Right]: [\n      [0, 0, 1],\n      [0, 1, 1],\n      [0, 1, 0],\n    ],\n    [ShapeOrientation.Down]: [\n      [0, 0, 0],\n      [1, 1, 0],\n      [0, 1, 1],\n    ],\n    [ShapeOrientation.Left]: [\n      [0, 1, 0],\n      [1, 1, 0],\n      [1, 0, 0],\n    ],\n  },\n\n  [ShapeType.O]: {\n    [ShapeOrientation.Up]: [\n      [1, 1],\n      [1, 1],\n    ],\n    [ShapeOrientation.Right]: [\n      [1, 1],\n      [1, 1],\n    ],\n    [ShapeOrientation.Down]: [\n      [1, 1],\n      [1, 1],\n    ],\n    [ShapeOrientation.Left]: [\n      [1, 1],\n      [1, 1],\n    ],\n  },\n\n  [ShapeType.J]: {\n    [ShapeOrientation.Up]: [\n      [1, 0, 0],\n      [1, 1, 1],\n      [0, 0, 0],\n    ],\n    [ShapeOrientation.Right]: [\n      [0, 1, 1],\n      [0, 1, 0],\n      [0, 1, 0],\n    ],\n    [ShapeOrientation.Down]: [\n      [0, 0, 0],\n      [1, 1, 1],\n      [0, 0, 1],\n    ],\n    [ShapeOrientation.Left]: [\n      [0, 1, 0],\n      [0, 1, 0],\n      [1, 1, 0],\n    ],\n  },\n};\n","import { shuffle } from 'lodash';\nimport { ShapeType } from './tetromino';\n\n// Create a new randomizer object, which s passed in to the other methods in this module to get\n// random numbers. See http://tetris.wikia.com/wiki/Random_Generator.\nexport function create() {\n  return shuffle(Object.keys(ShapeType));\n}\n\n// Retrieve the next number. Returns an array with value and the next randomizer.\n//\n// Example:\n//\n//   [val, randomizer] = next(randomizer);\n//\nexport function next(randomizer) {\n  const [head, ...tail] = randomizer;\n\n  if (tail.length > 0) {\n    return [head, tail];\n  }\n\n  return [head, create()];\n}\n","import { fill } from 'lodash';\nimport * as Point from './point';\nimport * as Randomizer from './randomizer';\nimport * as Tetromino from './tetromino';\n\n// Create a new \"board\". Represented as a flat array of length 200, which is 10 columns wide by 20\n// rows tall.\nexport function create() {\n  return fill(new Array(200), 0, 0);\n}\n\nexport function commitTetrominoToBoard(board, tetromino, position, value) {\n  const shape = Tetromino.getShape(tetromino);\n  const mappedBoard = board.slice();\n\n  for (let r = 0; r < shape.length; r++) {\n    for (let c = 0; c < shape[r].length; c++) {\n      // If this part of the shape is \"off\", don't worry about it.\n      if (shape[r][c] === 0) { continue; }\n\n      const index = getBoardIndexFromPosition(Point.create(position.x + c, position.y + r));\n      mappedBoard[index] = value;\n    }\n  }\n\n  return mappedBoard;\n}\n\nexport function moveDown(board, tetromino, position, randomizer) {\n  const potentialPosition = Point.create(position.x, position.y + 1);\n\n  if (isValid(board, tetromino, potentialPosition)) {\n    return [board, tetromino, potentialPosition, randomizer];\n  }\n\n  const nextBoard = commitTetrominoToBoard(board, tetromino, position, 1);\n  const [nextShape, nextRandomizer] = Randomizer.next(randomizer);\n  const nextTetromino = Tetromino.create(nextShape);\n  const nextPosition = Point.create(3, 0);\n\n  return [nextBoard, nextTetromino, nextPosition, nextRandomizer];\n}\n\n// Move a tetromino left, if possible. Either way, return a position.\nexport function moveLeft(board, tetromino, position) {\n  const potentialPosition = Point.create(position.x - 1, position.y);\n\n  if (isValid(board, tetromino, potentialPosition)) {\n    return potentialPosition;\n  }\n\n  return position;\n}\n\n// Move a tetromino right, if possible. Either way, return a position.\nexport function moveRight(board, tetromino, position) {\n  const potentialPosition = Point.create(position.x + 1, position.y);\n\n  if (isValid(board, tetromino, potentialPosition)) {\n    return potentialPosition;\n  }\n\n  return position;\n}\n\n// Rotate a tetromino, if possible. Either way, return a tetromino.\nexport function rotate(board, tetromino, position) {\n  const potentialTetromino = Tetromino.rotate(tetromino);\n\n  if (isValid(board, potentialTetromino, position)) {\n    return Tetromino.rotate(tetromino);\n  }\n\n  return tetromino;\n}\n\n// Determine if a tetromino at a certain position on the board is \"valid\". In other words, doesn't\n// overlap with any existing filled spots and is completely on the board.\nfunction isValid(board, tetromino, position) {\n  const shape = Tetromino.getShape(tetromino);\n\n  for (let r = 0; r < shape.length; r++) {\n    for (let c = 0; c < shape[r].length; c++) {\n      // If this part of the shape is \"off\", don't worry about it.\n      if (shape[r][c] === 0) { continue; }\n\n      // If the horizontal position is off the board, it's not valid.\n      if (position.x + c < 0 || position.x + c > 9) { return false; }\n\n      // If the vertical position is off the board, it's not valid.\n      if (position.y + r < 0 || position.y + r > 19) { return false }\n\n      // If this part of the shape is over a part of the board that's \"on\", it's not valid.\n      const index = getBoardIndexFromPosition(Point.create(position.x + c, position.y + r));\n      if (board[index] === 1) { return false; }\n    }\n  }\n\n  return true;\n}\n\nfunction getBoardIndexFromPosition(position) {\n  return position.x + (position.y * 10);\n}\n","import React from 'react';\nimport Block from './Block';\nimport * as Board from '../utils/board';\n\nexport default function Matrix({ board, current, position }) {\n  const boardWithTetromino = Board.commitTetrominoToBoard(board, current, position, 2);\n\n  return (\n    <div style={styles.container}>\n      {boardWithTetromino.map((fill, i) => {\n        return <Block color={colors[fill]} key={`${i}-${fill}`} />\n      })}\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    borderBottom: '1px solid grey',\n    display: 'grid',\n    gridTemplateColumns: 'repeat(10, 1fr)',\n    height: 400,\n    width: 200,\n  },\n};\n\nconst colors = {\n  0: 'black',\n  1: 'dodgerblue',\n  2: 'limegreen',\n};\n","import React from 'react';\n\nexport default function ScoreBoard({ level, score }) {\n  return (\n    <div>\n      <div>Level: {level}</div>\n      <div>Score: {score}</div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function useKeyHandler(key, handler) {\n  React.useEffect(() => {\n    function handleKeyUp(event) {\n      if (event.key === key) {\n        handler(event);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyUp);\n\n    return () => document.removeEventListener('keyup', handleKeyUp);\n  }, [key]);\n}\n","import * as Board from './utils/board';\nimport * as Point from './utils/point';\nimport * as Randomizer from './utils/randomizer';\nimport * as Tetromino from './utils/tetromino';\n\nconst [firstShape, randomizer] = Randomizer.next(Randomizer.create());\n\nexport const StateTypes = {\n  Paused: 0,\n  Playing: 1,\n  Won: 2,\n  Lost: 3,\n};\n\nexport const ActionTypes = {\n  MoveDown: 'down',\n  MoveLeft: 'left',\n  MoveRight: 'right',\n  Reset: 'reset',\n  Rotate: 'rotate',\n  Start: 'start',\n  Stop: 'stop',\n  Tick: 'tick',\n};\n\nexport const initialState = {\n  board: Board.create(),\n  current: Tetromino.create(firstShape),\n  interval: 750,\n  level: 1,\n  position: Point.create(3, 0),\n  randomizer: randomizer,\n  score: 0,\n  state: StateTypes.Paused,\n}\n\nexport default function reducer(state, action) {\n  switch (action) {\n    case ActionTypes.Tick:\n    case ActionTypes.MoveDown: {\n      const [board, tetromino, position, randomizer] = Board.moveDown(state.board, state.current, state.position, state.randomizer);\n\n      return {\n        ...state,\n        board,\n        current: tetromino,\n        position,\n        randomizer,\n      };\n     }\n    case ActionTypes.MoveLeft:\n      return {\n        ...state,\n        position: Board.moveLeft(state.board, state.current, state.position),\n      };\n    case ActionTypes.MoveRight:\n      return {\n        ...state,\n        position: Board.moveRight(state.board, state.current, state.position),\n      };\n    case ActionTypes.Rotate:\n      return {\n        ...state,\n        current: Board.rotate(state.board, state.current, state.position),\n      };\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport Matrix from './Matrix';\nimport ScoreBoard from './ScoreBoard';\nimport useKeyHandler from '../hooks/useKeyHandler';\nimport useInterval from '../hooks/useInterval';\nimport reducer, { initialState, ActionTypes } from '../reducer';\n\nexport default function App() {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  useKeyHandler('ArrowUp', () => dispatch(ActionTypes.Rotate));\n  useKeyHandler('ArrowDown', () => dispatch(ActionTypes.MoveDown));\n  useKeyHandler('ArrowLeft', () => dispatch(ActionTypes.MoveLeft));\n  useKeyHandler('ArrowRight', () => dispatch(ActionTypes.MoveRight));\n\n  useInterval(state.interval, () => dispatch(ActionTypes.Tick));\n\n  return (\n    <div style={styles.container}>\n      <Matrix board={state.board} current={state.current} position={state.position} />\n      <ScoreBoard level={state.level} score={state.score} />\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    display: 'flex',\n  },\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(React.createElement(App), document.getElementById('root'));\n","import React from 'react';\n\nexport default function useInterval(delay, callback) {\n  const savedCallback = React.useRef();\n\n  React.useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  React.useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay != null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n"],"sourceRoot":""}